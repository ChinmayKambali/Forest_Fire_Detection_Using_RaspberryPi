import time
import board
import adafruit_dht
import smbus
from RPLCD.i2c import CharLCD

# Initialize DHT11 sensor on GPIO4 (Pin 7)
# DHT11 Connections:
# VCC -> Pin 1 (3.3V)
# Data -> Pin 7 (GPIO4)
# GND -> Pin 6 (Ground)
dht = adafruit_dht.DHT11(board.D4)

# Initialize LCD with confirmed address 0x27
# LCD Connections (I2C):
# VCC -> Pin 17 (3.3V)
# SDA -> Pin 3 (GPIO2, SDA)
# SCL -> Pin 5 (GPIO3, SCL)
# GND -> Pin 9 (Ground)
lcd = CharLCD('PCF8574', 0x27)

def clear_lcd():
    """Clear the LCD display"""
    lcd.clear()

def read_sensor():
    """Read temperature and humidity from DHT11"""
    try:
        temperature = dht.temperature
        humidity = dht.humidity
        return temperature, humidity
    except RuntimeError:
        return None, None

def main():
    print("Starting Temperature and Humidity Monitor...")
    print("Using DHT11 on Pin 7 and LCD I2C Address 0x27")
    
    while True:
        try:
            # Read sensor values
            temperature, humidity = read_sensor()
            
            if temperature is not None and humidity is not None:
                # Clear the LCD
                clear_lcd()
                
                # Format the temperature and humidity strings
                temp_str = f"Temp: {temperature}C"
                hum_str = f"Humidity: {humidity}%"
                
                # Display on LCD
                lcd.cursor_pos = (0, 0)  # First line
                lcd.write_string(temp_str)
                lcd.cursor_pos = (1, 0)  # Second line
                lcd.write_string(hum_str)
                
                # Print to console for debugging
                print(f"Temperature: {temperature}°C")
                print(f"Humidity: {humidity}%")
            else:
                print("Failed to read from DHT11 sensor")
            
            # Wait 2 seconds before next reading
            time.sleep(2)
            
        except KeyboardInterrupt:
            raise
        except Exception as e:
            print(f"Error occurred: {e}")
            time.sleep(2)  # Wait before trying again

if _name_ == "_main_":
    try:
        main()
    except KeyboardInterrupt:
        print("Program stopped by user")
        clear_lcd()
    finally:
        # Clean up
        lcd.clear()
        lcd.close()
